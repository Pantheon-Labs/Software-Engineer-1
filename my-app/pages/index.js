import Head from 'next/head'
import styles from '../styles/Home.module.css'
import axios from "axios";
import { useEffect, useState } from 'react';
import PageNav from '../Components/PageNav';
import CardList from '../Components/CardList';
import Main from '../Components/Main';
//import logo from '../pages/assets/Rick_and_Morty_logo.png';
import { Image } from '@chakra-ui/react';

export default function Home() {
	const [characters, setCharacters] = useState([]);
	const [pageInfo, setPageInfo] = useState([]);
	const [selectedCard, setSelectedCard] = useState([]);
	const [rickUrl, setRickUrl] = useState("https://rickandmortyapi.com/api/character/?name=Rick&page=1");
	const [mortyUrl, setMortyUrl] = useState("https://rickandmortyapi.com/api/character/?name=Morty&page=1");

	const [characterUrl, setCharacterUrl] = useState("https://rickandmortyapi.com/api/character/?page=1");
	const [page, setPage] = useState(1);

	useEffect(() => {
		const requestData = async () => {
			const axiosData = await axios.get(rickUrl)
				.then(function (res) {
					setCharacters(res.data.results);
					setPageInfo(res.data.info)
					let urlParams = new URLSearchParams(rickUrl);
					let query = urlParams.get("https://rickandmortyapi.com/api/character/?name=Rick&page");
					console.log("page =" + query + " rickUrl =" + rickUrl);
					setPage(query);
					console.log("Success " + res.data);
				})
				.catch(function (res) {
					if (res instanceof Error) {
						console.log("Failed " + res.message);
					} else {
						console.log("Didn't fail " + res.data);
					}
				});
		}
		return requestData();
	}, [rickUrl]);

	useEffect(() => {
		const requestData = async () => {
			const axiosData = await axios.get(mortyUrl)
				.then(function (res) {
					setCharacters(res.data.results);
					setPageInfo(res.data.info)
					let urlParams = new URLSearchParams(mortyUrl);
					let query = urlParams.get("https://rickandmortyapi.com/api/character/?name=Morty&page");
					console.log("page =" + query + " mortyUrl =" + mortyUrl);
					setPage(query);
					console.log("Success " + res.data);
				})
				.catch(function (res) {
					if (res instanceof Error) {
						console.log("Failed " + res.message);
					} else {
						console.log("Didn't fail " + res.data);
					}
				});
		}
		return requestData();
	}, [mortyUrl]);

	useEffect(() => {
		const requestData = async () => {
			const axiosData = await axios.get(characterUrl)
				.then(function (res) {
					setCharacters(res.data.results);
					setPageInfo(res.data.info)
					let urlParams = new URLSearchParams(characterUrl);
					let queryPage = urlParams.get("https://rickandmortyapi.com/api/character/?page");
					console.log("page =" + query + " characterUrl =" + characterUrl);
					setPage(queryPage);
					let queryName = urlParams.get("https://rickandmortyapi.com/api/character/?name");

					switch (queryName) {
						case 'Rick':
							return console.log("Rick");
						case 'Morty':
							return console.log('Morty');
						default:
							return console.log('page');
					}

					console.log("Success " + res.data);
				})
				.catch(function (res) {
					if (res instanceof Error) {
						console.log("Failed " + res.message);
					} else {
						console.log("Didn't fail " + res.data);
					}
				});
		}
		return requestData();
	}, [characterUrl]);

	console.log("characters from " + characters);

	return (
		<div className={styles.container}>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className={styles.main}>

				{pageInfo && (
					<>
						<Image src="../assets/Rick_and_Morty_logo.png" className="logo" alt="Rick and Morty Logo" />
						<PageNav nav={pageInfo} page={page} setCharacterUrl={setCharacterUrl} setRickUrl={setRickUrl} setMortyUrl={setMortyUrl} />
						<Main
							character={characters}
							selectedCard={selectedCard}
							pageInfo={pageInfo.pages}
							page={page}
						/>

						<CardList character={characters} setSelectedCard={setSelectedCard} />
					</>
				)
				}
			</main>

			<footer className={styles.footer}>
				This RickNMortyAPI viewer is not affiliated with the RickNMortyAPI or the RickNMorty series or any of its creators. This is only being provided as a free compliment to the RickNMorty API to give a demonstration of its usage.
				Provided for demo purposes only
			</footer>
		</div>
	)
}
